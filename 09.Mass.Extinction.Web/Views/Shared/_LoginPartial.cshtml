@using Microsoft.AspNetCore.Identity
@using _09.Mass.Extinction.Web.Data.Entities
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
  var user = await UserManager.GetUserAsync(User);
  string ClassName(string area, string page)
  {
    return ViewContext.RouteData.Values["Area"]?.ToString() == area
           && ViewContext.RouteData.Values["Page"]?.ToString() == page
      ? "active"
      : "";
  }
}

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
  <li class="nav-item dropdown">
    <a class="nav-link dropdown-toggle" href="#" id="navbarUserDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
      <img src="@user.ProfilePicture" alt="User Dropdown Menu" title="Hello @(user.Name)!" width="32" height="32" />
    </a>
    <ul class="dropdown-menu dropdown-menu-dark" style="width: max-content;" aria-labelledby="navbarUserDropdown">
      <li><span class="dropdown-item-text">Hello @user.Name!</span></li>
      <li>
        <a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Profile</a>
      </li>
      <li>
        <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new {area = ""})">
          <button type="submit" class="dropdown-item btn btn-link">Logout</button>
        </form>
      </li>
    </ul>
  </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link @ClassName("Identity", "/Account/Register")" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link @ClassName("Identity", "/Account/Login")" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
